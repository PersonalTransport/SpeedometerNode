node_capability_file;
LIN_language_version = "2.2";
node speedometer {
    general {
        LIN_protocol_version = "2.2";
        supplier = 0x4765; function = 0x3749; variant = 0;
        bitrate = automatic min 10 kbps max 20 kbps;
        sends_wake_up_signal = "no"; // should the speedometer be able to wake up the LIN bus?
    }
    diagnostic { // TODO none of these values are implemented by LIN driver
        NAD = 1 to 3;
        diagnostic_class = 1;
        P2_min = 100 ms;
        ST_min = 40 ms;
        support_sid { 0xB0, 0xB2, 0xB7 };
    }
    frames {
        publish speedometer_frame_0 {
            length = 2; // The number of bytes needed for this frame (1-8).
            signals {
                speedometer_fault_state   { size = 2;  init_value = 0; offset = 0; fault_encoding; }
                speedometer_error_bit     { size = 1;  init_value = 0; offset = 1; }
                vehicle_speed { size = 10; init_value = 0; offset = 0; mph_encoding; }
            }
        }
        // TODO add subscribed frames here!
    }
    encoding {
        mph_encoding {
            physical_value, 0, 1023, 0.0342136, 0, "MPH";
        }
        fault_encoding {
            logical_value, 0, "no result";
            logical_value, 1, "failed";
            logical_value, 2, "passed";
        }
    }
    status_management {
        response_error = error_bit;
        fault_state_signals = fault_state;
    }
}
